Para gerar um certificado autoassinado e as chaves privada (key.pem) e pública (cert.pem), você pode usar o OpenSSL. O OpenSSL é uma ferramenta amplamente utilizada para criar certificados, chaves e realizar outras operações criptográficas.

Aqui estão os passos detalhados para criar o certificado e as chaves:

Passo 1: Instalar o OpenSSL no Windows
Se ainda não tiver o OpenSSL instalado, siga esses passos:

Baixe o OpenSSL: Acesse o site oficial do OpenSSL e baixe a versão apropriada para o seu sistema Windows:
OpenSSL for Windows
Instale o OpenSSL: Durante a instalação, escolha a opção para adicionar o OpenSSL ao Path do sistema para poder executá-lo a partir de qualquer diretório.
Passo 2: Gerar as chaves e o certificado autoassinado
Abra o prompt de comando do Windows ou PowerShell:

Pressione Win + R, digite cmd ou powershell e pressione Enter.
Navegue até o diretório onde o OpenSSL foi instalado (caso necessário). O OpenSSL geralmente é instalado em C:\Program Files\OpenSSL-Win64 ou similar.

Execute os comandos para gerar a chave privada e o certificado autoassinado:

No diretório desejado, execute o seguinte comando:

bash
Copiar código
openssl req -new -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out cert.pem
Explicação do comando:

req: Indica que estamos criando uma requisição de certificado (geração de chave + certificado).
-newkey rsa:2048: Gera uma nova chave privada RSA de 2048 bits.
-nodes: Não protege a chave privada com uma senha (sem passphrase).
-keyout key.pem: Especifica o arquivo de saída da chave privada (será salvo como key.pem).
-x509: Gera um certificado X.509 (o tipo de certificado mais comum).
-days 365: Define a validade do certificado por 365 dias.
-out cert.pem: Especifica o arquivo de saída do certificado (será salvo como cert.pem).
Preencha as informações solicitadas: O OpenSSL pedirá algumas informações para o certificado, como:

Country Name: Código do país (ex: BR para Brasil).
State or Province Name: Nome do estado (ex: São Paulo).
Locality Name: Nome da cidade (ex: São Paulo).
Organization Name: Nome da organização (ex: Minha Empresa).
Organizational Unit Name: Unidade organizacional (ex: TI).
Common Name: Nome comum (geralmente o domínio ou nome do servidor).
Email Address: Endereço de e-mail (opcional).
Depois de preencher essas informações, o OpenSSL gerará o certificado (cert.pem) e a chave privada (key.pem).

Passo 3: Verificar os arquivos gerados
Após a execução do comando, dois arquivos serão criados no diretório atual:

key.pem: Chave privada (em formato PEM).
cert.pem: Certificado X.509 autoassinado (em formato PEM).
Você pode verificar os conteúdos dos arquivos executando o seguinte comando no terminal:

cat key.pem
cat cert.pem

Passo 4: Testar os arquivos
Agora, você tem o certificado (cert.pem) e a chave privada (key.pem) gerados. Esses arquivos podem ser usados para configurar servidores SSL/TLS, autenticação de clientes ou outras aplicações que exigem certificados digitais.

Passo 5: Exportar para outros formatos (opcional)
Se precisar dos arquivos em outros formatos, como .pfx (PKCS#12), você pode usar o OpenSSL para convertê-los.

Para gerar um arquivo .pfx (que contém tanto o certificado quanto a chave privada):

openssl pkcs12 -export -out arquivo.pfx -inkey key.pem -in cert.pem

Esse comando pedirá uma senha para proteger o arquivo .pfx gerado.

Conclusão
Com os comandos acima, você gerou um certificado autoassinado e as chaves privada e pública no formato PEM. O arquivo key.pem contém a chave privada, e o arquivo cert.pem contém o certificado autoassinado. Esses arquivos podem ser usados para diversas finalidades, como criar conexões seguras (SSL/TLS), autenticação, etc.
